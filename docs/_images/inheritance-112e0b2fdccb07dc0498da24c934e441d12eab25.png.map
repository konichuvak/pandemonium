<map id="inheritancea086ac94d2" name="inheritancea086ac94d2">
<area shape="rect" id="node1" title="Advantage Actor Critic" alt="" coords="437,127,495,147"/>
<area shape="rect" id="node2" title="Base class for Actor&#45;Critic architectures that operate on batches" alt="" coords="282,127,340,147"/>
<area shape="rect" id="node18" title="DQN style Option&#45;Critic architecture" alt="" coords="694,227,752,247"/>
<area shape="rect" id="node28" title="A variation of AC that approximates advantage with :math:`delta`" alt="" coords="437,329,495,349"/>
<area shape="rect" id="node9" title="Deep Q&#45;Network with all the bells and whistles mixed in." alt="" coords="573,388,631,408"/>
<area shape="rect" id="node14" title=":math:`n`&#45;step semi&#45;gradient :math:`text{SARSA}`" alt="" coords="426,166,505,187"/>
<area shape="rect" id="node15" title=":math:`n`&#45;step semi&#45;gradient expected :math:`text{SARSA}`" alt="" coords="426,206,505,227"/>
<area shape="rect" id="node4" title="Helper class that provides a standard way to create an ABC using" alt="" coords="4,187,62,207"/>
<area shape="rect" id="node5" title="Base class fot parametrized Demons implemented in PyTorch" alt="" coords="101,106,213,127"/>
<area shape="rect" id="node7" title="Learns the optimal policy while learning to predict" alt="" coords="110,206,204,227"/>
<area shape="rect" id="node16" title="Approximates state or state&#45;action values using linear projection" alt="" coords="267,4,355,25"/>
<area shape="rect" id="node21" title="Collects factual knowledge about environment by learning to predict" alt="" coords="103,286,211,306"/>
<area shape="rect" id="node24" title="A demon that maximizes un&#45;discounted n&#45;step return." alt="" coords="257,44,365,64"/>
<area shape="rect" id="node6" title="Categorical Q&#45;learning mixin." alt="" coords="423,567,509,588"/>
<area shape="rect" id="node8" title="**General Value Function Approximator**" alt="" coords="4,246,62,266"/>
<area shape="rect" id="node19" title="Base class for forward&#45;view :math:`text{TD}` methods." alt="" coords="124,246,190,266"/>
<area shape="rect" id="node22" title="Base class for backward&#45;view (online) :math:`text{TD}` methods." alt="" coords="124,347,190,367"/>
<area shape="rect" id="node23" title="Duelling de&#45;convolutional network for auxiliary pixel control task" alt="" coords="682,388,764,408"/>
<area shape="rect" id="node10" title=":math:`text{n&#45;step TD}` for estimating :math:`V ≈ v_{pi}`" alt="" coords="437,368,495,389"/>
<area shape="rect" id="node31" title=":math:`n`&#45;step :math:`text{TD}` performed on the past experiences" alt="" coords="561,288,643,308"/>
<area shape="rect" id="node11" title="Mixin that adds a replay buffer to an agent." alt="" coords="409,408,522,429"/>
<area shape="rect" id="node12" href="api/pandemonium.networks.TargetNetMixin.html#pandemonium.networks.TargetNetMixin" target="_top" title="Mixin that adds a target network to the agent." alt="" coords="417,488,514,508"/>
<area shape="rect" id="node13" title="Mixin for value&#45;based control algorithms that uses two separate" alt="" coords="421,527,510,548"/>
<area shape="rect" id="node17" title="Base class for all neural network modules." alt="" coords="4,106,62,127"/>
<area shape="rect" id="node20" title="Offline :math:`text{TD}(
ambda)` for prediction tasks" alt="" coords="251,249,371,270"/>
<area shape="rect" id="node29" title="Truncated :math:`text{TD}(
ambda)`" alt="" coords="282,329,340,349"/>
<area shape="rect" id="node27" title="Semi&#45;gradient :math:`text{TD}
ambda` rule for estimating :math:`tilde{v} ≈ v_{pi}`" alt="" coords="275,368,347,389"/>
<area shape="rect" id="node26" title="A special case of :math:`text{TD}
ambda` with :math:`
ambda = 0`" alt="" coords="437,448,495,468"/>
</map>
